{"version":3,"sources":["components/About.js","hooks/usePersist.js","components/DropZone.js","components/Result.js","components/MediaInfoJs.js","components/App.js","index.js"],"names":["About","className","id","icon","faAddressCard","faTrophy","href","faEnvelope","usePersist","key","onRestore","data","setState","state","useEffect","restoredJson","window","localStorage","getItem","JSON","parse","setItem","stringify","restore","save","DropZone","analyzing","onDrop","useDropzone","disabled","getRootProps","getInputProps","isDragActive","classNames","dragover","faCog","size","spin","faHandRock","type","details","result","error","colSpan","Fragment","format","startTime","duration","Result","onRemove","name","onClick","event","stopPropagation","tabIndex","title","faTimes","MediaInfo","getRandomId","Math","random","toString","substr","collapseAll","restoredResults","Object","entries","reduce","acc","val","collapsed","MediaInfoJs","useState","setAnalyzing","results","setResults","getFileInfo","mediainfo","file","analyzeData","chunkSize","offset","Promise","resolve","reject","reader","FileReader","onload","target","Uint8Array","readAsArrayBuffer","slice","readChunk","then","prevResults","general","media","track","filter","Format","Duration","Encoded_Date","filterResult","catch","stack","finally","files","a","useCallback","onChangeFile","resultId","resultsContainer","map","keys","length","App","page","SwitchTransition","CSSTransition","mountOnEnter","timeout","faGithub","flip","faCopyright","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f98e3be9.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAddressCard } from '@fortawesome/free-regular-svg-icons'\nimport { faEnvelope, faTrophy } from '@fortawesome/free-solid-svg-icons'\n\nconst About = ({ className }) => (\n  <div className={className} id=\"about\">\n    <h1>\n      <FontAwesomeIcon icon={faAddressCard} /> about\n    </h1>\n    <p>\n      <strong>mediainfo.js</strong> can analyze all kinds of media files for\n      you. It shows technical details and metadata.\n    </p>\n\n    <h2>\n      <FontAwesomeIcon icon={faTrophy} /> thanks\n    </h2>\n\n    <p>\n      - <a href=\"https://mediaarea.net/en/MediaInfo\">mediainfo</a> -{' '}\n      <a href=\"https://react-dropzone.js.org/\">react-dropzone</a> -{' '}\n      <a href=\"https://fontawesome.com/\">font awesome</a>\n    </p>\n\n    <h2>\n      <FontAwesomeIcon icon={faEnvelope} /> contact\n    </h2>\n\n    <p>\n      Get in touch on <a href=\"https://github.com/buzz/mediainfo.js\">GitHub</a>.\n    </p>\n  </div>\n)\n\nexport default About\n","import { useEffect } from 'react'\n\nconst restore = (key) => {\n  const restoredJson = window.localStorage.getItem(key)\n  if (restoredJson) {\n    try {\n      return JSON.parse(restoredJson)\n    } catch {\n      // Reset if data is corrupted\n      window.localStorage.setItem(key, JSON.stringify({}))\n      return {}\n    }\n  }\n  return {}\n}\n\nconst save = (key, state) =>\n  window.localStorage.setItem(key, JSON.stringify(state))\n\nconst usePersist = ({ key, onRestore = (data) => data, setState, state }) => {\n  useEffect(() => {\n    setState(onRestore(restore(key)))\n  }, [key, onRestore, setState])\n  useEffect(() => {\n    save(key, state)\n  }, [key, state])\n}\n\nexport default usePersist\n","import React from 'react'\nimport classNames from 'classnames'\nimport { useDropzone } from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport { faHandRock } from '@fortawesome/free-regular-svg-icons'\n\nconst DropZone = ({ analyzing, onDrop }) => {\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    disabled: analyzing,\n    onDrop,\n  })\n  return (\n    <div\n      id=\"dropzone\"\n      className={classNames('big', 'center', { dragover: isDragActive })}\n      {...getRootProps()}\n    >\n      {analyzing ? (\n        <div id=\"status\" className=\"hidden\">\n          <FontAwesomeIcon icon={faCog} size=\"lg\" spin /> Analyzing â€¦\n        </div>\n      ) : (\n        <div id=\"dropcontrols\">\n          <div id=\"dropcontrolstext\">\n            <FontAwesomeIcon icon={faHandRock} size=\"lg\" /> Drop media files here\n            <br />\n            <span className=\"small\">(or click)</span>\n          </div>\n          <input id=\"fileinput\" type=\"file\" {...getInputProps()} />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default DropZone\n","import React from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\n\n\nconst details = (result) => {\n  if (result.error) {\n    return <td colSpan=\"3\" className=\"result-error\">{result.error}</td>\n  } else {\n    return <React.Fragment>\n      <td>{result.format}</td>\n      <td>{result.startTime}</td>\n      <td>{result.duration}</td>\n    </React.Fragment>\n  }\n}\n\nconst Result = ({id, result, onRemove}) => {\n  return (\n    <tr>\n      <td>{result.name}</td>\n      {details(result)}\n      <td>\n        <button\n          className=\"remove\"\n          onClick={(event) => {\n            event.stopPropagation()\n            onRemove(id)\n          }}\n          tabIndex={0}\n          title=\"Remove from list\"\n          type=\"button\"\n        >\n          <FontAwesomeIcon icon={faTimes} size=\"lg\"/>\n        </button>\n      </td>\n    </tr>\n  )\n}\n\nexport default Result\n","import React, {useCallback, useState} from 'react'\n\nimport usePersist from '../hooks/usePersist'\nimport DropZone from './DropZone'\nimport Result from './Result'\n\n// import MediaInfo from 'mediainfo.js'\n// // using MediaInfo through npm/react didn't work,\n// // so using it from CDN instead (see public/index.html)\nconst MediaInfo = window.MediaInfo\n\nconst readChunk = (file) => (chunkSize, offset) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = (event) => {\n      if (event.target.error) {\n        reject(event.target.error)\n      }\n      resolve(new Uint8Array(event.target.result))\n    }\n    reader.readAsArrayBuffer(file.slice(offset, offset + chunkSize))\n  })\n\nconst getRandomId = () => Math.random().toString(36).substr(2, 9)\n\nconst collapseAll = (restoredResults) =>\n  Object.entries(restoredResults).reduce((acc, [key, val]) => {\n    return {\n      ...acc,\n      [key]: {\n        ...val,\n        collapsed: true,\n      },\n    }\n  }, {})\n\nconst MediaInfoJs = ({className}) => {\n  const [analyzing, setAnalyzing] = useState(false)\n  const [results, setResults] = useState({})\n\n  usePersist({\n    key: 'results',\n    onRestore: collapseAll,\n    setState: setResults,\n    state: results,\n  })\n\n  function filterResult(result) {\n    const general = result.media.track.filter((track) => track[\"@type\"] === \"General\")[0]\n    return {\n      format: general.Format,\n      duration: general.Duration,\n      startTime: general.Encoded_Date\n    }\n  }\n\n  /**\n   * Gets file info for a single file.\n   */\n  function getFileInfo(mediainfo, file) {\n    return mediainfo\n      .analyzeData(() => file.size, readChunk(file))\n      .then((result) => {\n        setResults((prevResults) => ({\n            [getRandomId()]: {\n              ...(filterResult(result)),\n              name: file.name,\n              collapsed: false,\n            },\n            ...prevResults,\n          }))\n        }\n      )\n      .catch((error) =>\n        setResults((prevResults) => ({\n          [getRandomId()]: {collapsed: false, error: error.stack},\n          ...prevResults,\n        }))\n      )\n      .finally(() => setAnalyzing(false))\n  }\n\n  /**\n   * Gets info for each file in list of files.\n   * It's important to 'await' each call to getFileInfo,\n   * otherwise the info returned is truncated.\n   */\n  async function onChangeFile(mediainfo, files) {\n    for (const file of files) {\n      if (file) {\n        await getFileInfo(mediainfo, file)\n      }\n    }\n  }\n\n  /**\n   * When file(s) dropped, get info for each of them\n   */\n  const onDrop = useCallback((files) => {\n    if (files) {\n      setAnalyzing(true)\n      MediaInfo().then((mediainfo) =>\n        onChangeFile(mediainfo, files)\n      )\n    }\n  }, [])\n\n  const onRemove = useCallback(\n    (resultId) => setResults(({[resultId]: _, ...rest}) => rest),\n    []\n  )\n\n  const resultsContainer = Object.entries(results).map(([resultId, result]) => (\n    <Result\n      id={resultId}\n      key={resultId}\n      onRemove={onRemove}\n      result={result}\n    />\n  ))\n\n  return (\n    <div className={className}>\n      <DropZone analyzing={analyzing} onDrop={onDrop}/>\n      <div id=\"results\">\n        <table className=\"results-table\">\n          <thead>\n          <tr>\n            <th>Name</th>\n            <th>Format</th>\n            <th>Start Time</th>\n            <th>Duration</th>\n            <th>{/*(delete button)*/}</th>\n          </tr>\n          </thead>\n          <tbody>\n          {resultsContainer}\n          </tbody>\n        </table>\n        {Object.keys(results).length ? null : 'No results yetâ€¦'}\n      </div>\n    </div>\n  )\n}\nexport default MediaInfoJs\n","import React, {useState} from 'react'\nimport {CSSTransition, SwitchTransition} from 'react-transition-group'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faGithub} from '@fortawesome/free-brands-svg-icons'\nimport {faCopyright} from '@fortawesome/free-regular-svg-icons'\n\nimport About from './About'\nimport MediaInfoJs from './MediaInfoJs'\n\nconst PAGE_FADE_TIME = 400\n\nfunction App() {\n\n  const [page, setPage] = useState('mediainfojs')\n\n  return (\n    <>\n      <section id=\"page\">\n        <SwitchTransition>\n          <CSSTransition\n            classNames=\"page\"\n            key={page}\n            mountOnEnter\n            timeout={PAGE_FADE_TIME}\n          >\n            {page === 'mediainfojs' ? <MediaInfoJs/> : <About/>}\n          </CSSTransition>\n        </SwitchTransition>\n      </section>\n      <footer>\n        <p>\n          <a href=\"https://github.com/kamatsuoka/playlister\">\n            <FontAwesomeIcon className=\"fa-padded\" icon={faGithub} size=\"lg\"/>\n            GitHub\n          </a>\n          <span className=\"pull-right\">\n            <FontAwesomeIcon flip=\"horizontal\" icon={faCopyright}/>{' '}\n            <a href=\"https://github.com/kamatsuoka\">kamatsuoka</a> 2021\n          </span>\n        </p>\n      </footer>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\nimport './styles/index.sass'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}