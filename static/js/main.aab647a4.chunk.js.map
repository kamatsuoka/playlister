{"version":3,"sources":["components/About.js","hooks/usePersist.js","components/DropZone.js","components/MediaInfoJs.js","components/Result.js","components/MetadataList.js","components/TimezoneOverride.js","components/StartEndList.js","components/MediaPage.js","components/App.js","index.js"],"names":["About","className","id","icon","faAddressCard","faTrophy","href","faEnvelope","usePersist","key","onRestore","data","setState","state","useEffect","restoredJson","window","localStorage","getItem","JSON","parse","setItem","stringify","restore","save","DropZone","analyzing","onDrop","useDropzone","disabled","getRootProps","getInputProps","isDragActive","classNames","dragover","faCog","size","spin","faHandRock","type","MediaInfo","getRandomId","Math","random","toString","substr","collapseAll","restoredResults","Object","entries","reduce","acc","val","MediaInfoJs","results","setResults","useState","setAnalyzing","useCallback","files","getFileInfo","mediainfo","file","analyzeData","chunkSize","offset","Promise","resolve","reject","reader","FileReader","onload","event","target","error","Uint8Array","result","readAsArrayBuffer","slice","readChunk","then","prevResults","general","media","track","filter","format","Format","duration","Duration","startTime","Encoded_Date","filterResult","name","catch","stack","finally","a","details","colSpan","Fragment","Result","onRemove","onClick","stopPropagation","tabIndex","title","faTimes","MetadataList","values","setValues","resultId","resultsContainer","map","dayjs","extend","utc","timezone","TimezoneOverride","value","setValue","override","setOverride","zoneId","tz","guess","checked","onChange","e","style","display","SIZE","default","localizedFormat","advancedFormat","customParseFormat","StartEndList","fileInfo","overrideTimeZone","startEndList","setStartEndList","calculateStartEnd","timestamp","time","replace","local","match","parseTimestamp","endTime","add","toISOString","startEnds","flatMap","sort","s1","s2","displayTemplate","startEnd","MediaPage","setFileInfo","timeZone","setTimeZone","setOverrideTimeZone","keys","length","float","mini","showFiles","engine","Styletron","App","page","theme","LightTheme","SwitchTransition","CSSTransition","mountOnEnter","timeout","faGithub","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.aab647a4.chunk.js","sourcesContent":["import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAddressCard } from '@fortawesome/free-regular-svg-icons'\nimport { faEnvelope, faTrophy } from '@fortawesome/free-solid-svg-icons'\n\nconst About = ({ className }) => (\n  <div className={className} id=\"about\">\n    <h1>\n      <FontAwesomeIcon icon={faAddressCard} /> about\n    </h1>\n    <p>\n      <strong>mediainfo.js</strong> can analyze all kinds of media files for\n      you. It shows technical details and metadata.\n    </p>\n\n    <h2>\n      <FontAwesomeIcon icon={faTrophy} /> thanks\n    </h2>\n\n    <p>\n      - <a href=\"https://mediaarea.net/en/MediaInfo\">mediainfo</a> -{' '}\n      <a href=\"https://react-dropzone.js.org/\">react-dropzone</a> -{' '}\n      <a href=\"https://fontawesome.com/\">font awesome</a>\n    </p>\n\n    <h2>\n      <FontAwesomeIcon icon={faEnvelope} /> contact\n    </h2>\n\n    <p>\n      Get in touch on <a href=\"https://github.com/buzz/mediainfo.js\">GitHub</a>.\n    </p>\n  </div>\n)\n\nexport default About\n","import { useEffect } from 'react'\n\nconst restore = (key) => {\n  const restoredJson = window.localStorage.getItem(key)\n  if (restoredJson) {\n    try {\n      return JSON.parse(restoredJson)\n    } catch {\n      // Reset if data is corrupted\n      window.localStorage.setItem(key, JSON.stringify({}))\n      return {}\n    }\n  }\n  return {}\n}\n\nconst save = (key, state) =>\n  window.localStorage.setItem(key, JSON.stringify(state))\n\nconst usePersist = ({ key, onRestore = (data) => data, setState, state }) => {\n  useEffect(() => {\n    setState(onRestore(restore(key)))\n  }, [key, onRestore, setState])\n  useEffect(() => {\n    save(key, state)\n  }, [key, state])\n}\n\nexport default usePersist\n","import React from 'react'\nimport classNames from 'classnames'\nimport { useDropzone } from 'react-dropzone'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\nimport { faHandRock } from '@fortawesome/free-regular-svg-icons'\n\nconst DropZone = ({ analyzing, onDrop }) => {\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    disabled: analyzing,\n    onDrop,\n  })\n  return (\n    <div\n      id=\"dropzone\"\n      className={classNames('big', 'center', { dragover: isDragActive })}\n      {...getRootProps()}\n    >\n      {analyzing ? (\n        <div id=\"status\" className=\"hidden\">\n          <FontAwesomeIcon icon={faCog} size=\"lg\" spin /> Analyzing …\n        </div>\n      ) : (\n        <div id=\"dropcontrols\">\n          <div id=\"dropcontrolstext\">\n            <FontAwesomeIcon icon={faHandRock} size=\"lg\" /> Drop media files here\n            <br />\n            <span className=\"small\">(or click)</span>\n          </div>\n          <input id=\"fileinput\" type=\"file\" {...getInputProps()} />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default DropZone\n","import React, {useCallback, useState} from 'react'\n\nimport usePersist from '../hooks/usePersist'\nimport DropZone from './DropZone'\n\n// import MediaInfo from 'mediainfo.js'\n// // using MediaInfo through npm/react didn't work,\n// // so using it from CDN instead (see public/index.html)\nconst MediaInfo = window.MediaInfo\n\nconst readChunk = (file) => (chunkSize, offset) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = (event) => {\n      if (event.target.error) {\n        reject(event.target.error)\n      }\n      resolve(new Uint8Array(event.target.result))\n    }\n    reader.readAsArrayBuffer(file.slice(offset, offset + chunkSize))\n  })\n\nconst getRandomId = () => Math.random().toString(36).substr(2, 9)\n\nconst collapseAll = (restoredResults) =>\n  Object.entries(restoredResults).reduce((acc, [key, val]) => {\n    return {\n      ...acc,\n      [key]: {\n        ...val,\n      },\n    }\n  }, {})\n\n/**\n * Renders DropZone (and file picker) for one or more media files\n */\nconst MediaInfoJs = ({results, setResults}) => {\n  const [analyzing, setAnalyzing] = useState(false)\n\n  usePersist({\n    key: 'results',\n    onRestore: collapseAll,\n    setState: setResults,\n    state: results,\n  })\n\n  function filterResult(result) {\n    const general = result.media.track.filter((track) => track[\"@type\"] === \"General\")[0]\n    return {\n      format: general.Format,\n      duration: general.Duration,\n      startTime: general.Encoded_Date\n    }\n  }\n\n  /**\n   * When file(s) dropped, get info for each of them.\n   */\n  const onDrop = useCallback((files) => {\n    /**\n     * Gets file info for a single file.\n     */\n    const getFileInfo = (mediainfo, file) => {\n      return mediainfo\n        .analyzeData(() => file.size, readChunk(file))\n        .then((result) => {\n            setResults((prevResults) => ({\n              [getRandomId()]: {\n                ...(filterResult(result)),\n                name: file.name,\n              },\n              ...prevResults,\n            }))\n          }\n        )\n        .catch((error) =>\n          setResults((prevResults) => ({\n            [getRandomId()]: {\n              name: file.name,\n              error: error.stack\n            },\n            ...prevResults,\n          }))\n        )\n        .finally(() => setAnalyzing(false))\n    }\n\n    if (files) {\n      setAnalyzing(true)\n      MediaInfo().then(async (mediainfo) => {\n          for (const file of files) {\n            if (file) {\n              // need to 'await' each call to getFileInfo,\n              // otherwise the info returned is truncated.\n              await getFileInfo(mediainfo, file)\n            }\n          }\n        }\n      )\n    }\n  }, [setResults])\n\n  return (\n    <DropZone analyzing={analyzing} onDrop={onDrop}/>\n  )\n}\nexport default MediaInfoJs\n","import React from 'react'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faTimes} from '@fortawesome/free-solid-svg-icons'\n\n\nconst details = (result) => {\n  if (result.error) {\n    return <td colSpan=\"3\" className=\"result-error\">{result.error}</td>\n  } else {\n    return <React.Fragment>\n      <td>{result.format}</td>\n      <td>{result.startTime}</td>\n      <td>{result.duration}</td>\n    </React.Fragment>\n  }\n}\n\nconst Result = ({id, result, onRemove}) => {\n  return (\n    <tr>\n      <td>{result.name}</td>\n      {details(result)}\n      <td className=\"delete-button\">\n        <button\n          className=\"remove\"\n          onClick={(event) => {\n            event.stopPropagation()\n            onRemove(id)\n          }}\n          tabIndex={0}\n          title=\"Remove from list\"\n          type=\"button\"\n        >\n          <FontAwesomeIcon icon={faTimes} size=\"lg\"/>\n        </button>\n      </td>\n    </tr>\n  )\n}\n\nexport default Result\n","import React, {useCallback} from \"react\"\nimport Result from \"./Result\"\n\n/**\n * List of file info from MediaInfo\n */\nconst MetadataList = ({values, setValues}) => {\n\n  const onRemove = useCallback(\n    (resultId) => setValues(({[resultId]: _, ...rest}) => rest),\n    [setValues]\n  )\n\n  const resultsContainer = Object.entries(values).map(([resultId, result]) => (\n    <Result\n      id={resultId}\n      key={resultId}\n      onRemove={onRemove}\n      result={result}\n    />\n  ))\n\n  return (\n    <div id=\"results\">\n      <table className=\"file-list\">\n        <thead>\n        <tr>\n          <th>Name</th>\n          <th>Format</th>\n          <th>Start Time</th>\n          <th>Duration</th>\n          <th className=\"delete-button\"/>\n        </tr>\n        </thead>\n        <tbody>\n        {resultsContainer}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default MetadataList\n","import {TimezonePicker} from \"baseui/timezonepicker\"\nimport {SIZE} from \"baseui/input\"\nimport React, {useEffect} from \"react\"\nimport {Checkbox} from \"baseui/checkbox\"\nimport dayjs from \"dayjs\"\nimport utc from \"dayjs/plugin/utc\"\nimport timezone from \"dayjs/plugin/timezone\"\n\ndayjs.extend(utc)\ndayjs.extend(timezone)\n\nconst TimezoneOverride = ({value, setValue, override, setOverride}) => {\n\n  /**\n   * Guess local time zone\n   */\n  useEffect(() => {\n    if (value === \"\") {\n      const zoneId = dayjs.tz.guess()\n      setValue(zoneId)\n    }\n  }, [setValue, value])\n\n  return (\n    <div id=\"timezonefix\">\n      <Checkbox\n        checked={override}\n        onChange={e => setOverride(e.target.checked)}\n      >\n        Are start times above actually in local time zone?\n      </Checkbox>\n\n      <div style={{display: \"none\"}}>\n        <TimezonePicker\n          value={value}\n          size={SIZE.default}\n          onChange={({id}) => {\n            setValue(id)\n          }}\n          disabled={!override}\n          className=\"picker\"\n        />\n      </div>\n    </div>\n  )\n\n}\n\nexport default TimezoneOverride\n","import React, {useEffect} from \"react\"\nimport dayjs from \"dayjs\"\nimport utc from 'dayjs/plugin/utc'\nimport localizedFormat from \"dayjs/plugin/localizedFormat\"\nimport advancedFormat from \"dayjs/plugin/advancedFormat\"\nimport timezone from \"dayjs/plugin/timezone\" // dependent on utc plugin\nimport customParseFormat from \"dayjs/plugin/customParseFormat\"\n\ndayjs.extend(localizedFormat)\ndayjs.extend(advancedFormat)\ndayjs.extend(customParseFormat)\ndayjs.extend(timezone)\ndayjs.extend(utc)\n\n/**\n * List of calculated file properties\n */\nconst StartEndList = ({fileInfo, overrideTimeZone, startEndList, setStartEndList}) => {\n\n  /**\n   * Calculate start and end time from file info\n   */\n  useEffect(() => {\n    const parseTimestamp = (timestamp) => {\n      if (overrideTimeZone) {\n        const time = timestamp.replace('UTC ', '')\n        return dayjs(time).local()\n      } else {\n        if (timestamp.match(\"^UTC \")) {\n          const time = timestamp.replace('UTC ', '') + ' +00:00'\n          return dayjs(time, 'YYYY-MM-DD HH:mm:ss Z').tz(\"UTC\")\n        } else {\n          return dayjs(timestamp)\n        }\n      }\n    }\n\n    const calculateStartEnd = (resultId, result) => {\n      const startTime = parseTimestamp(result.startTime)\n      const endTime = startTime.add(result.duration, \"second\")\n      return {\n        id: resultId,\n        name: result.name,\n        startTime: startTime.toISOString(),\n        endTime: endTime.toISOString()\n      }\n    }\n\n    // filter out any files that don't have a start time (probably not media files)\n    const startEnds = Object.entries(fileInfo)\n      .flatMap(([resultId, result]) =>\n        result.startTime ? [calculateStartEnd(resultId, result)] : []\n      ).sort((s1, s2) => s1.startTime > s2.startTime ? 1 : -1)\n    setStartEndList(startEnds)\n  }, [fileInfo, overrideTimeZone, setStartEndList])\n\n  const displayTemplate = 'ddd MMM D h:mm:ss A z YYYY'\n\n  return (\n    <div id=\"start-end\">\n      <table className=\"file-list\">\n        <thead>\n        <tr>\n          <th>Name</th>\n          <th>Start Time</th>\n          <th>End Time</th>\n        </tr>\n        </thead>\n        <tbody>\n        {startEndList\n          .map(startEnd =>\n            (\n              <tr key={startEnd.id}>\n                <td>{startEnd.name}</td>\n                <td>{dayjs(startEnd.startTime).format(displayTemplate)}</td>\n                <td>{dayjs(startEnd.endTime).format(displayTemplate)}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default StartEndList\n","import MediaInfoJs from \"./MediaInfoJs\"\nimport React, {useState} from \"react\"\nimport MetadataList from \"./MetadataList\"\nimport TimezoneOverride from \"./TimezoneOverride\"\nimport StartEndList from \"./StartEndList\"\nimport {Button, SIZE} from \"baseui/button\";\n\n/**\n * Page that holds MediaInfo lookup and results\n */\nconst MediaPage = ({className}) => {\n\n  const [fileInfo, setFileInfo] = useState({})\n  const [timeZone, setTimeZone] = useState(\"\");\n  const [overrideTimeZone, setOverrideTimeZone] = useState(false)\n  const [startEndList, setStartEndList] = useState([])\n\n  const showFiles = (fileInfo) => {\n    return <React.Fragment>\n      <div id=\"file-metadata\">\n        <h3>File Metadata</h3>\n        <div style={{float: 'right'}}>\n          <Button size={SIZE.mini} onClick={() => setFileInfo({})}>Clear All</Button>\n        </div>\n      </div>\n      <MetadataList values={fileInfo} setValues={setFileInfo}/>\n      <hr/>\n      <TimezoneOverride value={timeZone} setValue={setTimeZone}\n                        override={overrideTimeZone} setOverride={setOverrideTimeZone}/>\n      <h3>Start and End Times</h3>\n      <StartEndList fileInfo={fileInfo} overrideTimeZone={overrideTimeZone}\n                    startEndList={startEndList} setStartEndList={setStartEndList}/>\n    </React.Fragment>\n  }\n\n  return (\n    <div className={className}>\n      <MediaInfoJs results={fileInfo} setResults={setFileInfo}/>\n      {Object.keys(fileInfo).length > 0 ? showFiles(fileInfo) : null}\n    </div>\n  )\n}\n\nexport default MediaPage\n","import React, {useState} from 'react'\nimport {CSSTransition, SwitchTransition} from 'react-transition-group'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faGithub} from '@fortawesome/free-brands-svg-icons'\nimport {BaseProvider, LightTheme} from 'baseui'\nimport {Provider as StyletronProvider} from \"styletron-react\"\nimport {Client as Styletron} from \"styletron-engine-atomic\"\n\nimport About from './About'\nimport MediaPage from './MediaPage'\n\nconst PAGE_FADE_TIME = 400\nconst engine = new Styletron()\n\nfunction App() {\n\n  const [page] = useState('mediapage')\n\n  return (\n    <StyletronProvider value={engine}>\n      <BaseProvider theme={LightTheme}>\n        <section id=\"page\">\n          <SwitchTransition>\n            <CSSTransition\n              classNames=\"page\"\n              key={page}\n              mountOnEnter\n              timeout={PAGE_FADE_TIME}\n            >\n              {page === 'mediapage' ? <MediaPage/> : <About/>}\n            </CSSTransition>\n          </SwitchTransition>\n        </section>\n        <footer>\n          <p>\n            <a href=\"https://github.com/kamatsuoka/playlister\">\n              <FontAwesomeIcon className=\"fa-padded\" icon={faGithub} size=\"lg\"/>\n              GitHub\n            </a>\n          </p>\n        </footer>\n      </BaseProvider>\n    </StyletronProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/App'\nimport './styles/index.sass'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}